type Query {
    #Beds
  findBedById(bedId: String) : Bed
  findAllBeds : [Bed]

    #Accomodatiosns
    findAccomodationById(accomodationId: String) : Accomodation
    findAllAccomodations : [Accomodation]

}


type Mutation{
    #Beds
    createBed(inputBed: InputBed) : Bed,
    updateBed(bedId: String, inputBed: InputBed) : Bed,
    deleteBedById(bedId: String) : String

    #Accomodations

    createAccomodation(inputAccomodation: InputAcommodation) : Accomodation,
    updateAccomodation(accomodationId: String, inputAccomodation: InputAcommodation) : Accomodation,
    deleteAccomodationById(accomodationId: String) : String



}



type Bed{
  id: ID,
  title: String,
  service: String
}

type Accomodation{
  id: ID,
    attention_number: Int,
    owner: String,
    description: String,
    company: String,
    imageUrl: String,
    stars: Int,
    schedule: String,
    page: String,
    quantity: Int,
    description_services: String,
    typeRoom: [String],
    instagramUrl: String,
    facebookUrl: String,
    webUrl: String,
    coordinates: String



}

input InputBed{
  title: String,
  service: String
}

input InputAcommodation{
    attention_number: Int,
    owner: String,
    description: String,
    company: String,
    imageUrl: String,
    stars: Int,
    schedule: String,
    page: String,
    quantity: Int,
    description_services: String,
    typeRoom: [String]
    instagramUrl: String,
    facebookUrl: String,
    webUrl: String,
    coordinates: String
}